# -*- coding:utf-8 -*-

# -----------------------------------------
# Updated Date: 2014/03/24
# Input: The file generated by analysis.r.
# Output: The data was formatted by its transcript name, gene name, normalization data and other statistical data.
# Environemt: Linux or Windows
# Description: Could generate the 'first screen' of the result on transcript level. Find out what items are 
#              potential for further analyses in the particular format.
# -----------------------------------------

import sys
import os

if len(sys.argv) < 3:
    print "Usage: python extractGeTreData.py <cbn_Ge_tr.csv> <out_Ge_tr.csv>\n"
    exit(0)

#for i in range(0,len(sys.argv),1):
    # 0 file name
    # 1 pass_1
    # 2 pass_2
    #print i,sys.argv[i]

try:
    fin = open(sys.argv[1],"r")
except:
    print "Error: Make sure",sys.argv[1],"exist."
    exit(0)

try:
    fout = open(sys.argv[2],"w")
except:
    fin.close()
    print "Error:",sys.argv[2]," could not be opened."
    exit(0)

fout.write("transcript_name,gene_name,control_mean,transcript_mean,M,D,probability\n")

tmp = ""
data = []
geneTrans = []
flag = 0
while True:
    tmp = fin.readline().strip()
    if len(tmp) == 0:
        break
    if flag == 0:
        flag = flag + 1
        continue
    data = tmp.split(',')
    geneTrans = (data[0]).split('|')
    # print data[0],geneTrans[0],geneTrans[1]
    try:
    # there might be some not useful data
        fout.write(geneTrans[0] + "," + geneTrans[1] + ",")
        for i in range(1,6,1):
            fout.write(data[i])
            if(i < 5):
                fout.write(",")
            else:
                fout.write("\n")
    except:
        continue

fin.close()
fout.close()
